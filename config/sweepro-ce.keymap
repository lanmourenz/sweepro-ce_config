/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define DEFAULT 0
#define COLEMAK 1
#define NUM     2
#define SYM     3
#define FUN     4

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            timeout-ms = <120>;
            layers = <0>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
            timeout-ms = <120>;
            layers = <0>;
        };

        Win {
            bindings = <&kp LCMD>;
            key-positions = <32 31>;
            timeout-ms = <120>;
            layers = <0>;
        };

        lctrl {
            bindings = <&kp LCTRL>;
            key-positions = <11 12>;
            layers = <0>;
            timeout-ms = <120>;
        };

        lalt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <12 13>;
            timeout-ms = <120>;
            layers = <0>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <20 21>;
            timeout-ms = <120>;
        };

        Cap {
            bindings = <&kp CAPSLOCK>;
            key-positions = <10 11>;
            timeout-ms = <120>;
        };

        Rshift {
            bindings = <&kp RSHFT>;
            key-positions = <29 28>;
            timeout-ms = <120>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1 &kp NUMBER_5 &kp N0 &kp NUMBER_5 &kp NUMBER_0 &kp NUMBER_7>;
            label = "NEW_MACRO";
            tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
  &kp Q      &kp W        &kp E         &kp R        &kp T          &kp Y            &kp U  &kp I      &kp O    &kp P
  &kp A      &kp S        &kp D         &kp F        &kp G          &kp H            &kp J  &kp K      &kp L    &kp ENTER
  &kp Z      &kp X        &kp C         &kp V        &kp B          &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH
  &kp LG(E)  &lt 1 SPACE  &kp LEFT_GUI  &lt 2 SPACE  &kp BACKSPACE  &kp LC(LS(ESC))
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp UP DOWN>;
        };

        NUM {
            bindings = <
  &kp N1     &kp N2  &kp N3  &kp N4            &kp N5         &kp N6            &kp N7             &kp N8     &kp N9     &kp N0
  &kp TAB    &trans  &trans  &kp C_AC_REFRESH  &kp C_AL_CALC  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp EQUAL  &trans
  &kp LSHFT  &trans  &trans  &trans            &trans         &trans            &trans             &trans     &trans     &trans
  &trans     &trans  &trans  &trans            &trans         &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>,
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans      &new_macro    &trans        &trans        &trans  &trans
  &trans  &trans  &trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans
  &trans  &trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
  &trans  &trans  &trans  &trans  &trans      &trans
            >;
        };

        layer_3 {
            bindings = <
  &kp F1  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
